//combination sum
#include <iostream>
#include<vector>
using namespace std;
void find_c(int index,int n, int target, vector<int>&v, vector<vector<int>>&ans, vector<int>&ds)
{
    if(index==n)
    {
        if(target==0)
        {
            ans.push_back(ds);
        }
        return ;
    }
    if(v[index]<=target)
    {
        ds.push_back(v[index]);
        find_c(index,n,target-v[index],v,ans,ds);
        ds.pop_back();
    }
    find_c(index+1,n,target,v,ans,ds);
}
vector<vector<int>>find_comb(vector<int>&v,int n,int target)
{
    vector<vector<int>>ans;
    vector<int>ds;
    find_c(0,n,target,v,ans,ds);
    return ans;
}
int main()
{
    int n,target;
    cin>>n;
    vector<int>v(n);
    for(int i=0;i<n;i++)
    {
        cin>>v[i];
    }
    cout<<"Enter the Target"<<endl;
    cin>>target;
    vector<vector<int>>ans=find_comb(v,n,target);
    for(int i=0;i<ans.size();i++)
    {
        for(int j=0;j<ans[i].size();j++)
        {
            cout<<ans[i][j]<<" ";
        }
        cout<<endl;
    }
    return 0;
}
